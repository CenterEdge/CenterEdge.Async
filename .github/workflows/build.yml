name: Build

on:
  push:
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v4
      with:
        versionSpec: "6.4.0"

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v4
      with:
        configFilePath: "GitVersion.yml"

    # Cache packages for faster subsequent runs
    - uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', 'nuget.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore
      working-directory: ./src
      run: dotnet restore ./CenterEdge.Async.sln

    - name: Build
      working-directory: ./src
      run: dotnet build --no-restore -c Release /p:Version=${{ steps.gitversion.outputs.semVer }} ./CenterEdge.Async.sln

    - name: Test
      working-directory: ./src
      run: dotnet test --no-build -c Release -f net8.0 -l "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true" ./CenterEdge.Async.sln

    - name: Pack
      working-directory: ./src
      run: dotnet pack --no-build -c Release /p:PackageVersion=${{ steps.gitversion.outputs.fullSemVer }} ./CenterEdge.Async.sln

    - name: Push
      working-directory: ./src
      # Publish CI packages from PRs and tagged releases
      if: ${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/pull/') }}
      run: |
        dotnet nuget add source --name github https://nuget.pkg.github.com/CenterEdge/index.json &&
        dotnet nuget push **/*.${{ steps.gitversion.outputs.fullSemVer }}.nupkg -k ${{ secrets.GITHUB_TOKEN  }} -s github

    - name: Push to NuGet.org
      working-directory: ./src
      # Publish tagged releases to NuGet.org
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      run: dotnet nuget push **/*.${{ steps.gitversion.outputs.fullSemVer }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s nuget.org
